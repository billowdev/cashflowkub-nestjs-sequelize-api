import { Model } from "sequelize-typescript";
import { AssetEntity } from "src/asset/entities/asset.entity";
import { CashflowinEntity } from "src/cashflowin/entities/cashflowin.entity";
import { CashflowoutEntity } from "src/cashflowout/entities/cashflowout.entity";
import { CategoryEntity } from "src/category/entities/category.entity";
import { DebtEntity } from "src/debt/entities/debt.entity";
import { PocketEntity } from "src/pocket/entities/pocket.entity";
import { TransferEntity } from "src/transfer/entities/transfer.entity";
import { Role } from "./role.enum";
import { Optional } from "sequelize";
export declare type UserAttributes = {
    id: string;
    username: string;
    hashPassword: string;
    email: string;
    firstName: string;
    lastName: string;
    phone: string;
    isActive: boolean;
    role: Role;
    createdAt: Date;
    updatedAt: Date;
};
export declare type UserCreationAttributes = Optional<UserAttributes, 'id' | 'firstName' | 'lastName' | 'phone' | 'createdAt' | 'updatedAt'>;
export declare class UserEntity extends Model<UserAttributes, UserCreationAttributes> {
    id: string;
    username: string;
    hashPassword: string;
    firstName: string;
    lastName: string;
    email: string;
    phone: string;
    isActive: boolean;
    role: Role;
    createdAt: Date;
    updatedAt: Date;
    pockets: PocketEntity[];
    cashflowins: CashflowinEntity[];
    cashflowouts: CashflowoutEntity[];
    assets: AssetEntity[];
    debts: DebtEntity[];
    transfers: TransferEntity[];
    categories: CategoryEntity[];
}
